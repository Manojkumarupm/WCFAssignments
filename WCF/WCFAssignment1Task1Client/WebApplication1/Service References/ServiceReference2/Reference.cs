//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.36415
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.ServiceReference2 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobList", Namespace="http://schemas.datacontract.org/2004/07/WcfService2")]
    [System.SerializableAttribute()]
    public partial class JobList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RolesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobName {
            get {
                return this.JobNameField;
            }
            set {
                if ((object.ReferenceEquals(this.JobNameField, value) != true)) {
                    this.JobNameField = value;
                    this.RaisePropertyChanged("JobName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Organization {
            get {
                return this.OrganizationField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationField, value) != true)) {
                    this.OrganizationField = value;
                    this.RaisePropertyChanged("Organization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IOpeningJob")]
    public interface IOpeningJob {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpeningJob/OpeningJobs", ReplyAction="http://tempuri.org/IOpeningJob/OpeningJobsResponse")]
        WebApplication1.ServiceReference2.JobList[] OpeningJobs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpeningJob/OpeningJobs", ReplyAction="http://tempuri.org/IOpeningJob/OpeningJobsResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference2.JobList[]> OpeningJobsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpeningJob/OpeningJobsByRole", ReplyAction="http://tempuri.org/IOpeningJob/OpeningJobsByRoleResponse")]
        WebApplication1.ServiceReference2.JobList[] OpeningJobsByRole(string Role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOpeningJob/OpeningJobsByRole", ReplyAction="http://tempuri.org/IOpeningJob/OpeningJobsByRoleResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference2.JobList[]> OpeningJobsByRoleAsync(string Role);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOpeningJobChannel : WebApplication1.ServiceReference2.IOpeningJob, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OpeningJobClient : System.ServiceModel.ClientBase<WebApplication1.ServiceReference2.IOpeningJob>, WebApplication1.ServiceReference2.IOpeningJob {
        
        public OpeningJobClient() {
        }
        
        public OpeningJobClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OpeningJobClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OpeningJobClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OpeningJobClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebApplication1.ServiceReference2.JobList[] OpeningJobs() {
            return base.Channel.OpeningJobs();
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference2.JobList[]> OpeningJobsAsync() {
            return base.Channel.OpeningJobsAsync();
        }
        
        public WebApplication1.ServiceReference2.JobList[] OpeningJobsByRole(string Role) {
            return base.Channel.OpeningJobsByRole(Role);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference2.JobList[]> OpeningJobsByRoleAsync(string Role) {
            return base.Channel.OpeningJobsByRoleAsync(Role);
        }
    }
}
